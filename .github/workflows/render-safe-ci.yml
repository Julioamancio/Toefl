name: Render Safe CI

on:
  push:
    branches:
      - main
      - staging
      - feature/**
  pull_request:
    branches:
      - main

jobs:
  build-and-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8

      - name: Lint (fail on critical errors only)
        run: |
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Compile all Python files
        run: |
          python -m compileall -q .

      - name: Sanity import check
        run: |
          python - << 'PY'
          import importlib
          for m in ['app', 'models', 'services.certificate_generator']:
              importlib.import_module(m)
          print('Imports OK')
          PY

      - name: Generate sample certificate
        run: |
          python - << 'PY'
          from services.certificate_generator import CertificateGenerator
          import io
          gen = CertificateGenerator()
          buf = gen.generate_certificate_bytes({
              'name': 'Teste Cert',
              'listening': 240,
              'reading': 205,
              'lfm': 220,
              'total': 665,
              'test_date': '2025-08-02'
          })
          assert isinstance(buf, io.BytesIO)
          print('Certificate bytes:', len(buf.getvalue()))
          PY

      - name: Validate Render config file exists
        run: |
          test -f render.yaml && echo 'render.yaml found'